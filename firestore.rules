rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Basic user validation
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check email uniqueness
    function isEmailUnique(email) {
      let players = getAfter(/databases/$(database)/documents/players);
      let existingPlayers = players.where('email', '==', email).size();
      return existingPlayers == 0;
    }
    
    // User Collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && request.auth.uid == userId;
    }
    
    // Matches Collection
    match /matches/{matchId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
    }
    
    // Players Collection
    match /players/{playerId} {
      allow read: if isSignedIn();
      // Simplified create rule for testing
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }
  }
}