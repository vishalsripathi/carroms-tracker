rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check email uniqueness
    function isEmailUnique(email) {
      let players = collection('players');
      return !exists(/databases/$(database)/documents/players/$(players.where('email', '==', email).limit(1)));
    }
    
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
    
    match /players/{playerId} {
      allow read: if true;
      // Modified write rule to check email uniqueness
      allow create: if request.auth != null 
        && isEmailUnique(request.resource.data.email.lower());
      allow update: if request.auth != null 
        && (
          // Don't allow email updates
          !request.resource.data.diff(resource.data).affectedKeys().hasAny(['email'])
          || request.resource.data.email == resource.data.email
        );
      allow delete: if request.auth != null;
    }
    
    match /matches/{matchId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
  }
}